@{
    ViewBag.Title = "Basic";
}
<form id="fileupload" method="POST" enctype="multipart/form-data">
    <!-- The fileupload-buttonbar contains buttons to add/delete files and start/cancel the upload -->
    <div class="row fileupload-buttonbar">
        <div class="col-lg-7">
            <!-- The fileinput-button span is used to style the file input field as button -->
            <span class="btn btn-success fileinput-button">
                <i class="glyphicon glyphicon-plus"></i>
                <span>iframe upload</span>
                <input type="file" name="files[]" id="fileIframe" multiple>
            </span>
            <span class="btn btn-success fileinput-button">
                <i class="glyphicon glyphicon-plus"></i>
                <span>xhr upload</span>
                <input type="file" name="files[]" id="fileXhr" multiple>
            </span>
            <span class="btn btn-success fileinput-button">
                <i class="glyphicon glyphicon-plus"></i>
                <span>base64 upload</span>
                <input type="file" name="files[]" id="fileBase64" multiple>
            </span>
            <!-- The global file processing state -->
            <span class="fileupload-process"></span>
        </div>
        <!-- The global progress state -->
        <div class="col-lg-5 fileupload-progress fade">
            <!-- The global progress bar -->
            <div class="progress progress-striped active" role="progressbar" id="progress" aria-valuemin="0" aria-valuemax="100">
                <div class="progress-bar progress-bar-success" style="width:0%;"></div>
            </div>
            <!-- The extended global progress state -->
            <div class="progress-extended">&nbsp;</div>
        </div>

        <div id="fileView">
        </div>
    </div>

</form>
@section footer{
    <script>
        var config = {
            imageWidth: 1440,
            imageHeight: 1440,
            imageurl: 'http://localhost:9080',
        };

        $(function () {
            'use strict';
            // iframe上传
            $('#fileIframe').fileupload({
                url: config.imageurl + '/file/uploadfile',
                type: 'POST',
                dataType: 'json',
                maxFileSize: 10000000,
                acceptFileTypes: /(\.)(gif|jpeg|jpg|png|bmp)$/i,
                forceIframeTransport: true,
                redirect: "http://" + window.location.host + "/content/upload/result.html?",//回调页面
                done: function (e, data) {
                    $.each(data.result, function (index, file) {
                        $('<p/>').text('iframe上传' + file.name).appendTo('#fileView');
                        $('<img>').attr("src", config.imageurl + file.origin).appendTo('#fileView');
                    });
                },
                progressall: function (e, data) {
                    var progress = parseInt(data.loaded / data.total * 100, 10);
                    $('#progress .progress-bar').css(
                        'width',
                        progress + '%'
                    );
                }
            }).prop('disabled', !$.support.fileInput)
                .parent().addClass($.support.fileInput ? undefined : 'disabled');

            // xhr上传
            $('#fileXhr').fileupload({
                url: config.imageurl + '/file/uploadfile',
                type: 'POST',
                dataType: 'json',
                maxFileSize: 10000000,
                acceptFileTypes: /(\.)(gif|jpeg|jpg|png|bmp)$/i,
                done: function (e, data) {
                    $.each(data.result, function (index, file) {
                        $('<p/>').text('xhr上传' + file.name).appendTo('#fileView');
                        $('<img>').attr("src", config.imageurl + file.origin).appendTo('#fileView');
                    });
                },
                progressall: function (e, data) {
                    var progress = parseInt(data.loaded / data.total * 100, 10);
                    $('#progress .progress-bar').css(
                        'width',
                        progress + '%'
                    );
                }
            }).prop('disabled', !$.support.fileInput)
                .parent().addClass($.support.fileInput ? undefined : 'disabled');

            $("#fileBase64").on("change", function () {
                var file = this.files[0];


                var reader = new FileReader();
                reader.readAsDataURL(file);
                reader.onload = function (e) {
                    var img = new Image;
                    img.src = this.result;
                    img.onload = function () {
                        var canvas = document.createElement("canvas");
                        var drawer = canvas.getContext("2d");

                        if (img.width > img.height) {
                            canvas.width = img.width > config.imageWidth ? config.imageWidth : img.width;
                            canvas.height = canvas.width / img.width * img.height;
                        } else {
                            canvas.height = img.height > config.imageHeight ? config.imageHeight : img.height;
                            canvas.width = canvas.height / img.height * img.width;
                        }

                        drawer.drawImage(img, 0, 0, canvas.width, canvas.height);
                        var dataURL = canvas.toDataURL('image/png');

                        // 调用回调
                        $.post(config.imageurl + "/file/uploadfile?type=base64", { 'image': dataURL }, function (data) {
                            $.each(data, function (index, file) {
                                $('<p/>').text('base64上传' + file.name).appendTo('#fileView');
                                $('<img>').attr("src", config.imageurl + file.origin).appendTo('#fileView');
                            });
                        });
                    }
                }
            });
        });
    </script>
}
